var homeController = { init: function () { homeController.registerEvent() }, registerEvent: function () { $("#registerAgent").validate({ rules: { Email: { required: !0, email: !0 }, Password: { required: !0, minlength: 8 }, ConfirmPassword: { equalTo: "#Password" } }, messages: { Email: { required: "Bạn phải nhập Email", email: "Chưa đúng định dạng mail" }, Password: { required: "Bạn phải nhập mật khẩu", minlength: "Quá ngắn" }, ConfirmPassword: { equalTo: "Mật khẩu không khớp" } } }), $("#EditAgent").validate({ rules: { EmailEdit: { required: !0, email: !0 }, PasswordEdit: { minlength: 8 }, ConfirmPasswordEdit: { equalTo: "#PasswordEdit" } }, messages: { EmailEdit: { required: "Bạn phải nhập Email", email: "Chưa đúng định dạng mail" }, PasswordEdit: { minlength: "Quá ngắn" }, ConfirmPasswordEdit: { equalTo: "Mật khẩu không khớp" } } }), $("#AddAgent").off("click").on("click", function () { homeController.resetForm() }), $("#btnSave").off("click").on("click", function () { $("#registerAgent").valid() && homeController.saveData() }), $("#btnSaveEdit").off("click").on("click", function () { $("#EditAgent").valid() && homeController.UploadFile() }), $("#btnSave").off("click").on("click", function () { $("#registerAgent").valid() && homeController.saveData() }), $(".list_agent_ajax").off("click").on("click", function () { $(this).hasClass("active") || ($(".list_agent_ajax").removeClass("active").find("a").css("background-color", "#4a4a4a"), $(this).addClass("active"), $(this).find("a").css("background-color", "red"), homeController.loadDetail($(this).attr("idagent"))) }), $("#Delete_info_agent").off("click").on("click", function () { bootbox.confirm("Bạn có chắc chắn muốn xóa Agent?", function (t) { 1 == t && homeController.deleteAgent($(".list_agent_ajax.active").attr("idagent")) }) }), $("#edit_info_agent").off("click").on("click", function () { null != $(".list_agent_ajax.active").attr("idagent") ? (homeController.resetFormEdit(), $("#myModaledit").modal("show"), homeController.loadDetailEdit($(".list_agent_ajax.active").attr("idagent")), $("#EmailEdit").attr("readonly", "true")) : bootbox.alert("Chưa chọn Agent") }), $("#Avartar_Edit").change(function () { var t = this.files; t && t[0] && (this.files[0].name.match(/\.(jpg|jpeg|png|gif)$/) ? homeController.ReviewFIle(t[0]) : (bootbox.alert("Không phải định dạng ảnh"), $("#Avartar_Edit").val(null))) }) }, SearchAgent: function () { var t = document.getElementById("search_agent_"); $(".list_agent_ajax").show(), $(".list_agent_ajax").each(function () { -1 == $(this).find(".agentname").html().toUpperCase().indexOf(t.value.toUpperCase()) && $(this).hide() }) }, Count: function (t) { $(".list_agents").html("Số Agent " + ($(".list_agent_ajax").length + t)) }, saveData: function () { var t = { Email: $("#Email").val(), Password: $("#Password").val(), ConfirmPassword: $("#ConfirmPassword").val() }; $.ajax({ url: "/Home/RegisterAgent", data: { strAgent: JSON.stringify(t) }, type: "POST", dataType: "json", success: function (t) { 1 == t.status ? bootbox.alert("Thành công", function () { $("#myModal").modal("hide"), homeController.LoadAgent(), homeController.Count(1) }) : bootbox.alert(t.message) }, error: function (t) { console.log(t) } }) }, resetForm: function () { $("#Email").val(""), $("#Password").val(""), $("#ConfirmPassword").val("") }, loadDetail: function (t) { $.ajax({ url: "/Home/GetDetailAgent", data: { idAgent: t }, type: "GET", dataType: "json", success: function (t) { if (1 == t.status) { var e = t.data, a = t.typeaccout; $("#email_info_agent_").html(e.Email), $("#typeaccount_info_agent_").html(a), $("#s_total_chat").html(e.sumconver), $("#percent_good").html(e.like / e.sumconver * 100 + "%"), null != e.lastonline ? $("#time_info_agent_").html(new Date(parseInt(e.lastonline.replace("/Date(", "").replace(")/", ""), 10))) : $("#time_info_agent_").html("Không xác định"), null != e.Avartar ? $("#avartar_info_agent_").html('<img src=" /UploadedImageAvartar/' + e.Avartar + '">') : $("#avartar_info_agent_").html('<img src="/img/Home/avatar-chat.png" />') } else bootbox.alert(t.message) }, error: function (t) { console.log(t) } }) }, loadDetailEdit: function (t) { null != t && $.ajax({ url: "/Home/GetDetailAgent", data: { idAgent: t }, type: "GET", dataType: "json", success: function (t) { if (1 == t.status) { var e = t.data; $("#EmailEdit").val(e.Email), null != e.Avartar ? $("#uploadedImage").html('<img src="/UploadedImageAvartar/' + e.Avartar + '" class="img-responsive thumbnail"/>') : $("#uploadedImage").html('<img src="/img/Home/avatar-chat.png" class="img-responsive thumbnail"/>') } else bootbox.alert(t.message) }, error: function (t) { console.log(t) } }) }, deleteAgent: function (t) { $.ajax({ url: "/Home/DeleteAgent", data: { idAgent: t }, type: "POST", dataType: "json", success: function (t) { 1 == t.status ? bootbox.alert("Xóa thành công", function () { homeController.LoadAgent(), homeController.Count(-1) }) : bootbox.alert(t.message) }, error: function (t) { console.log(t) } }) }, LoadAgent: function () { $.ajax({ url: "/Home/LoadAgent", type: "GET", data: {}, dataType: "json", success: function (t) { if (t.status) { var e = t.data, a = "", i = $("#data-template").html(); $.each(e, function (t, e) { a += Mustache.render(i, { ID: e.Id, UserName: e.UserName.split("@")[0], Email: e.Email, Avartar: null == e.Avartar ? "/img/Home/avatar-chat.png" : "/UploadedImageAvartar/" + e.Avartar }) }), $(".listagents").html(a), homeController.registerEvent() } } }) }, alersad: function (t) { }, Update: function (t) { var e = $("#EmailEdit").val(), a = $("#PasswordEdit").val(), i = $("#ConfirmPasswordEdit").val(), n = ($("#Avartar_Edit").get(0).files, { Email: e, Password: a, ConfirmPassword: i, Avartar: t }); $.ajax({ url: "/Home/UpdateAgent", data: { strAgentedit: JSON.stringify(n) }, type: "POST", dataType: "json", success: function (t) { 1 == t.status ? bootbox.alert("Thành công", function () { $("#myModaledit").modal("hide"), homeController.LoadAgent() }) : bootbox.alert(t.message) }, error: function (t) { console.log(t) } }) }, UploadFile: function () { var t = $("#Avartar_Edit").get(0).files; if (0 != t.length) { var e = new FormData; e.append("ImageFile", t[0]), $.ajax({ type: "Post", url: "/Home/UploadFile", data: e, contentType: !1, processData: !1, success: function (t) { 0 == t.stt ? alert("Lỗi up file") : homeController.Update(t.LinkFile) } }) } else homeController.Update(null) }, ReviewFIle: function (t) { var e = new FileReader, a = new Image; e.readAsDataURL(t), e.onload = function (e) { a.src = e.target.result, a.onload = function () { var a = this.height, i = this.width, n = t.type, o = ~~(t.size / 1024) + "KB"; $("#targetImg").attr("src", e.target.result), $("#description").text("Size:" + o + ", " + a + "X " + i + ", " + n), $("#imgPreview").show() } } }, ClearPreview: function () { $("#imageBrowes").val(""), $("#description").text(""), $("#imgPreview").hide(), $("#Avartar_Edit").val(null) }, resetFormEdit: function () { $("#EmailEdit").val(""), $("#PasswordEdit").val(""), $("#ConfirmPasswordEdit").val(""), homeController.ClearPreview() }, ReadImage: function (t) { var e = new FileReader, a = new Image; e.readAsDataURL(t), e.onload = function (e) { a.src = e.target.result, a.onload = function () { var a = this.height, i = this.width, n = t.type, o = ~~(t.size / 1024) + "KB"; $("#targetImg").attr("src", e.target.result), $("#description").text("Size:" + o + ", " + a + "X " + i + ", " + n), $("#imgPreview").show() } } } }, SettingController = { init: function () { SettingController.registerEvent(), $(".tichhop").hide() }, registerEvent: function () { $("#s_general_setting").off("click").on("click", function () { $(this).addClass("current"), $(".setting_right").removeClass("current"), $("#frm_general").show(), $(".tichhop").hide() }), $(".setting_right").off("click").on("click", function () { $(this).addClass("current"), $("#s_general_setting").removeClass("current"), $(".tichhop").show(), $("#frm_general").hide() }), $(".btnsubmit_general").off("click").on("click", function () { bootbox.confirm("Lưu thay đổi", function (t) { 1 == t && SettingController.SaveSetting() }) }), $(".edit-show").off("click").on("click", function () { $(".edit-form").fadeIn(100) }) }, ReloadSetting: function (t) { $("#id_email_send_").find("span").html(t.email), $("#setting_sound").val(t.sound), $("#setting_share_file_Agent").val(t.sharefileAgent), $("#setting_share_file_visitor").val(t.sharefileAgent), $(".edit-form").fadeOut(100) }, SaveSetting: function () { var t = { emailsend: $(".edit-form").find("input").val(), sound: $("#setting_sound").is(":checked"), sharefileAgent: $("#setting_share_file_Agent").is(":checked"), sharefileVisitor: $("#setting_share_file_visitor").is(":checked") }; $.ajax({ url: "/Home/SettingUpdate", data: t, type: "POST", dataType: "json", success: function (e) { 1 == e.status ? (data = e.data, bootbox.alert("Thành công", function () { SettingController.ReloadSetting(t) })) : bootbox.alert("Lỗi") }, error: function (t) { console.log(t) } }) } }, ReportController = { init: function () { ReportController.registerEvent() }, registerEvent: function () { ReportController.chartdraw() }, chartdraw: function () { Highcharts.chart("container", { chart: { type: "spline" }, title: { text: "Biểu đồ thống kê" }, xAxis: { categories: ["Jan", "Feb"] }, yAxis: { title: { text: "Tần xuất bỏ lỡ (cuộc)" }, labels: { formatter: function () { return this.value } } }, tooltip: { crosshairs: !0, shared: !0 }, plotOptions: { spline: { marker: { radius: 4, lineColor: "#666666", lineWidth: 1 } } }, series: [{ name: "Cuộc chát bỏ lỡ", marker: { symbol: "square" }, data: [0, 6.9] }, { name: "Cuộc chát thông thường", marker: { symbol: "diamond" }, data: [0, 4.2] }] }) } }, homeconfig = { pageSize: 12, pageIndex: 1 }, HistoryController = { init: function () { HistoryController.registerEvent() }, registerEvent: function () { $("#date_option").off("click").on("click", function () { "none" == $("#hisdate").css("display") ? $("#hisdate").show() : $("#hisdate").hide() }), $("#form_dropdown").off("click").on("click", function () { "none" == $("#formsearch_his").css("display") ? $("#formsearch_his").show() : $("#formsearch_his").hide() }), $(".closesearch").off("click").on("click", function () { "none" == $("#formsearch_his").css("display") ? $("#formsearch_his").show() : $("#formsearch_his").hide() }), $(".filter_search").off("click").on("click", function () { var t = (null == $("#txt_message").val() ? "" : $("#txt_message").val().slice(0, 10) + "...,") + (null == $("#txt_name").val() ? "" : $("#txt_name").val() + ",") + (null == $("#txt_email").val() ? "" : $("#txt_email").val() + ",") + (null == $("#txt_phone").val() ? "" : $("#txt_phone").val() + " "); $("#form_dropdown").html(t), HistoryController.FitterAjaxL($("#txt_message").val(), $("#txt_name").val(), $("#txt_email").val(), $("#txt_phone").val()), $("#formsearch_his").hide() }), $(".title").off("click").on("click", function () { $("#form_dropdown").html("Tìm kiếm visitor") }), $(".his_filter.date_history").off("click").on("click", function () { $("#date_option").html($(this).find("a").html()), $("#hisdate").hide(), HistoryController.FitterDay($(this).attr("_key")) }), $("#customhistory").off("click").on("click", function () { $("#customdate-his").show(), $("#datepicker").datepicker(), $("#datepickerlast").datepicker(), $("#datepicker").change(function () { var t = new Date($(this).val()); new Date < t && bootbox.alert("Không được chọn ngày của tương lai", function () { $("#datepicker").val(null) }) }), $("#datepickerlast").change(function () { if (!$("#datepicker").val().match(/\S/)) return bootbox.alert("Chưa chọn ngày bắt đầu"), void $("#datepickerlast").val(null); var t = new Date($(this).val()), e = new Date($("#datepicker").val()); t > new Date && bootbox.alert("Không được chọn ngày của tương lai", function () { $("#datepickerlast").val(null) }), t < e && bootbox.alert("Phải chọn sau ngày bắt đầu", function () { $("#datepickerlast").val(null) }) }) }), $("#chose_date_rank").off("click").on("click", function () { if (!$("#datepicker").val().match(/\S/) || !$("#datepickerlast").val().match(/\S/)) return bootbox.alert("Chưa chọn ngày bắt đầu hoặc kết thúc"), !1; $("#hisdate").hide(), $("#customdate-his").hide(), HistoryController.FitterDayCustom($("#datepicker").val(), $("#datepickerlast").val()) }), $("#agent").off("click").on("click", function () { "none" == $(".agent_datelist").css("display") ? $(".agent_datelist").show() : $(".agent_datelist").hide() }), $(".his_filter.agent_history").off("click").on("click", function () { $(".agent_datelist").fadeOut(100), $("#agent > a").html($(this).find("a").html()), HistoryController.FitterAgent($(this).attr("_key")) }), $("#rating").off("click").on("click", function () { "none" == $("#rating > .datelist").css("display") ? $("#rating > .datelist").show() : $("#rating > .datelist").hide() }), $(".his_filter.rating_history").off("click").on("click", function () { $("#rating > .datelist").fadeOut(100), $("#rating > a").html($(this).find("a").html()), HistoryController.FitterByFeeling($(this).attr("like")) }), $(".history_row").off("click").on("click", function () { $(".historyview").fadeIn(100), HistoryController.LoadConver($(this).attr("IDVisitor")) }), $("#closehistory").off("click").on("click", function () { $(".historyview").fadeOut(100) }) }, FitterAgent: function (t) { var e = { IdAgent: t }; $.ajax({ url: "/Home/FitterByAgent", type: "GET", data: e, dataType: "json", success: function (t) { if (t.status) { var e = t.data.History, a = "", i = $("#data-template-History").html(); $.each(e, function (t, e) { var n = new Date(parseInt(e.Date.replace("/Date(", "").replace(")/", ""), 10)), o = n.getMonth() + 1 + "/" + n.getDate() + "/" + n.getUTCFullYear() + " "; a += Mustache.render(i, { Address: e.Address, Visitor: "#" + e.Visitor, iconstt: null == e.Agent ? '<i class="fa fa-envelope" aria-hidden="true"></i>' : '<i class="fa fa-comments" aria-hidden="true"></i>', sumary: e.sumary, VisitorID: e.Visitor, VisitorName: e.VisitorName, AgentID: e.Agent, AgentName: null == e.AgentName ? "" : "và " + e.AgentName, DateTimeStart: o + HistoryController.format_time(n) }) }), $("#table_history").find("tbody").html(a), HistoryController.registerEvent() } else bootbox.alert("Lỗi") } }) }, format_time: function (t) { var e = t.getHours(), a = t.getMinutes(), i = t.getSeconds(), n = e > 11 ? "PM" : "AM"; return e > 12 ? e -= 12 : 0 == e && (e = "12"), a < 10 && (a = "0" + a), i < 10 && (i = "0" + i), e + ":" + a + ":" + i + " " + n }, FitterDay: function (t) { var e; switch (t) { case "today": e = 0; break; case "yesterday": e = 1; break; case "last_7": e = 7; break; case "last_30": e = 30; break; default: e = -1 } var a = new Date; a.setDate(a.getDate() - e), a.setHours(0), a.setMinutes(0), a.setSeconds(0); var i = { startDate: a.toUTCString() }; $.ajax({ url: "/Home/CustomDateHistory", type: "GET", data: i, dataType: "json", success: function (t) { if (t.status) { var e = t.data.History, a = "", i = $("#data-template-History").html(); $.each(e, function (t, e) { var n = new Date(parseInt(e.Date.replace("/Date(", "").replace(")/", ""), 10)), o = n.getMonth() + 1 + "/" + n.getDate() + "/" + n.getUTCFullYear() + " "; a += Mustache.render(i, { Address: e.Address, Visitor: "#" + e.Visitor, idAjaxAgent: e.Agent, iconstt: null == e.Agent || 0 == e.Agent.length ? '<i class="fa fa-envelope" aria-hidden="true"></i>' : '<i class="fa fa-comments" aria-hidden="true"></i>', sumary: e.sumary, VisitorID: e.Visitor, VisitorName: e.VisitorName, AgentID: e.Agent, AgentName: null == e.AgentName ? "" : "và " + e.AgentName, DateTimeStart: o + HistoryController.format_time(n) }) }), $("#table_history").find("tbody").html(a), HistoryController.registerEvent() } else bootbox.alert("Lỗi") } }) }, FitterDayCustom: function (t, e) { var t = new Date(t), e = new Date(e), a = { startDate: t.toUTCString(), endDate: e.toUTCString() }; $.ajax({ url: "/Home/CustomDateHistory", type: "GET", data: a, dataType: "json", success: function (t) { if (t.status) { var e = t.data.History, a = "", i = $("#data-template-History").html(); $.each(e, function (t, e) { var n = new Date(parseInt(e.Date.replace("/Date(", "").replace(")/", ""), 10)), o = n.getMonth() + 1 + "/" + n.getDate() + "/" + n.getUTCFullYear() + " "; a += Mustache.render(i, { Address: e.Address, idAjaxAgent: e.Agent, Visitor: "#" + e.Visitor, iconstt: null == e.Agent ? '<i class="fa fa-envelope" aria-hidden="true"></i>' : '<i class="fa fa-comments" aria-hidden="true"></i>', sumary: e.sumary, VisitorID: e.Visitor, VisitorName: e.VisitorName, AgentID: e.Agent, AgentName: null == e.AgentName ? "" : "và " + e.AgentName, DateTimeStart: o + HistoryController.format_time(n) }) }), $("#table_history").find("tbody").html(a), HistoryController.registerEvent() } else bootbox.alert("Lỗi") } }) }, FitterByFeeling: function (t) { var e = { Like: t }; $.ajax({ url: "/Home/FitterByFeeling", type: "GET", data: e, dataType: "json", success: function (t) { if (t.status) { var e = t.data.History, a = "", i = $("#data-template-History").html(); $.each(e, function (t, e) { var n = new Date(parseInt(e.Date.replace("/Date(", "").replace(")/", ""), 10)), o = n.getMonth() + 1 + "/" + n.getDate() + "/" + n.getUTCFullYear() + " "; a += Mustache.render(i, { Address: e.Address, idAjaxAgent: e.Agent, Visitor: "#" + e.Visitor, iconstt: null == e.Agent ? '<i class="fa fa-envelope" aria-hidden="true"></i>' : '<i class="fa fa-comments" aria-hidden="true"></i>', sumary: e.sumary, VisitorID: e.Visitor, VisitorName: e.VisitorName, AgentID: e.Agent, AgentName: null == e.AgentName ? "" : "và " + e.AgentName, DateTimeStart: o + HistoryController.format_time(n) }) }), $("#table_history").find("tbody").html(a), HistoryController.registerEvent() } else bootbox.alert("Lỗi") } }) }, FitterAjaxL: function (t, e, a, i) { var n = { mess: t, visitor: e, email: a, phone: i }; $.ajax({ url: "/Home/FitterMutilt", type: "GET", data: n, dataType: "json", success: function (t) { if (t.status) { var e = t.data.History, a = "", i = $("#data-template-History").html(); $.each(e, function (t, e) { var n = new Date(parseInt(e.Date.replace("/Date(", "").replace(")/", ""), 10)), o = n.getMonth() + 1 + "/" + n.getDate() + "/" + n.getUTCFullYear() + " "; a += Mustache.render(i, { Address: e.Address, idAjaxAgent: e.Agent, Visitor: "#" + e.Visitor, iconstt: null == e.Agent ? '<i class="fa fa-envelope" aria-hidden="true"></i>' : '<i class="fa fa-comments" aria-hidden="true"></i>', sumary: e.sumary, VisitorID: e.Visitor, VisitorName: e.VisitorName, AgentID: e.Agent, AgentName: null == e.AgentName ? "" : "và " + e.AgentName, DateTimeStart: o + HistoryController.format_time(n) }) }), $("#table_history").find("tbody").html(a), HistoryController.registerEvent() } else bootbox.alert("Lỗi") } }) }, LoadConver: function (t) { var e = { IDvisitor: t }; $.ajax({ url: "/Home/LoadConvert", type: "GET", data: e, dataType: "json", success: function (t) { if (t.status) { var e = t.data, a = "", i = $("#data-template-History-conver").html(), n = $("#data-template-History-conver2").html(); $.each(e, function (t, e) { var o = new Date(parseInt(e.Date.replace("/Date(", "").replace(")/", ""), 10)), r = o.getMonth() + 1 + "/" + o.getDate() + "/" + o.getUTCFullYear() + " "; 1 == e.Actor ? a += Mustache.render(i, { NameActor: e.NameAgent, DateAction: r + HistoryController.format_time(o), Messger: e.Line }) : a += Mustache.render(n, { NameActor: e.NameAgent, DateAction: r + HistoryController.format_time(o), Messger: e.Line }) }), $("#tabhistory1").find(".transcript").html(a), HistoryController.registerEvent() } else bootbox.alert("Lỗi") } }) }, paging: function (t, e, a) { var i = Math.ceil(t / homeconfig.pageSize); 0 !== $("#pagination a").length && !0 !== a || ($("#pagination").empty(), $("#pagination").removeData("twbs-pagination"), $("#pagination").unbind("page")), $("#pagination").twbsPagination({ totalPages: i, first: "Đầu", next: "Tiếp", last: "Cuối", prev: "Trước", visiblePages: 10, onPageClick: function (t, a) { homeconfig.pageIndex = a, setTimeout(e, 200) } }) } };